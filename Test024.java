/* =================================================
■■■ 연산자(Operator) ■■■
- 비트 단위 연산자 (&, | ,^, ~) 
논리연산자랑 다름! &&, ||, !
- 비트 shift 연산 -> 가장 빠름
===================================================*/

// 비트 단위 연산사 xor(^) 연산자를 활용하여 두 변수에 담겨있는 내용(값) 바꾸기
// 장점) 1. 추가 연산을 안해도되고 2. 빠른 연산을 할 수 있다.

public class Test024
{
	public static void main(String[] args)
	{
		// 주요 변수 선언
		int x = 20, y = 23;

		// 담긴 내용물 확인
		System.out.printf("x->%d, y->%d\n", x, y);

		/*
		// 추가 변수 선언
		int temp;

		// 연산 및 처리
		temp = x;
		x = y;
		y = temp;
		*/

		x=x^y;  //y=y^x;
		y=y^x;  //x=x^y;
		x=x^y;  //y=y^x;
		
		// 결과 출력
		System.out.printf("x->%d, y->%d\n", x, y);
		

	}

}
/* 실행 결과
x->20, y->23
x->23, y->20
계속하려면 아무 키나 누르십시오 . . .
*/

/*
x->20, y->23
x=x^y;
y=y^x;
x=x^y; 
↓

x=20^23;
00010100 ->20
00010111 ->23
--------
00000011 ->3

x=3;
y=23^3;

000010111 ->23
000000011 ->3
---------
000010100 ->20

y=20;
x=3^20;

00000011 ->3
00010100 ->20
---------
000010111 ->23

*/