/* ======================================
■■■ 정렬(sort) 알고리즘 ■■■
- 버블 정렬(Bubble Sort)
=========================================*/
/*
○ 정렬
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
	 -> 보기 좋게... 검색하기 위함

○ 정렬의 종류
	: 선택 정렬, 버블 정력, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬....

알아둬야할 점! ===> 정렬이라는 행위는 부하가 심하다(많은 리소스가 필요하다)

*/

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 82 60 62
// 계속하려면 아무 키나 누르세요....

public class Test104
{
	public static void main(String[] args)
	{
		/* 버블소트는 인접해있는 것들끼리 비교

		42 52 12 62 60     0   1            기준(=) 0 1 2 3
		== --
		42 12 52 62 60     1   2
		   == --
		42 12 52 62 60     2   3
		      == --
		42 12 52 60 62     3   4
		         == --
		-------------------------------------1회전  (가장 큰수 젤 오른쪽fix)
		12 42 52 60 62     0   1             기준(=) 0 1 2 
		== --
		12 42 52 60 62     1   2
		   == --
		12 42 52 60 62     2   3
		      == --
		-------------------------------------2회전  (그래서 2회전때 62까지안감 60까지 자리잡음)
		12 42 52 60 62     0   1             기준(=) 0 1
		== --
		12 42 52 60 62     1   2
		   == --
		-------------------------------------3회전  (52 자리잡음)
		12 42 52 60 62     0   1             기준(=) 0
		== --
		-------------------------------------4회전  (42 자리잡음)
		
		*/
		System.out.print("Source Data : ");
		int[] a = {52, 42, 12, 62, 60};

		for (int n : a)
			System.out.print(n + " ");
		System.out.println();


		// Bubble Sort
		int i=0;
		for (i=1; i<a.length; i++)          // 뒤에서 비교 대상을 하나씩 줄여주는 역할
		{	
			//테스트
			//System.out.print(i + " ");    //--==>> 1 2 3 4
			
			for (int j=0; j<a.length-i;j++)
			{
				if (a[j]>a[j+1])  //인접해 있는 것과 비교니까!
				{
					a[j] = a[j]^a[j+1];
					a[j+1] = a[j+1]^a[j];
					a[j] = a[j]^a[j+1];
				}
			}
		}

		
		System.out.print("Sorted Data : ");
		for (int n : a)
			System.out.print(n + " ");
		System.out.println();

	}
}
/*
Source Data : 52 42 12 62 60
Sorted Data : 12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/