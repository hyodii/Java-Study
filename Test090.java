/* =================================
■■■ 배열 ■■■
- 배열과 난수 처리
====================================*/
/*
  ※ Random 클래스 활용

  사용자로부터 임의의 정수를 입력받아
  그 정수만큼의 난수(1~100)를 발생시켜 배열에 담고
  배열에 담겨있는 데이터들 중
  가장 큰 값과 가장 작은 값을 선택하여
  결과를 출력하는 프로그램을 구현한다.

실행 예)
발생시킬 난수의 갯수 입력 : 6
(53 17 69 45 10 55 -> 무작위로 발생한 정수들...)
(int[] arr = {53, 17, 69, 45, 10, 55} -> 배열에 담아내기(배열 구성))
가장 큰 값 : 69,  가장 작은 값 : 10
계속하려면 아무 키나 누르세요...
*/
import java.util.Scanner;
import java.util.Random;


public class Test090
{
	public static void main(String[] args)
	{
		//Scanner 인스턴스 생성
		Scanner sc = new Scanner(System.in);

		//안내 메세지 출력
		System.out.print("발생시킬 난수의 갯수 입력 :");
		int size = sc.nextInt();

		// size 변수에 담아낸 수 만큰의 배열방 만들기
		// (배열 선언 및 메모리 할당)
		int[] arr = new int[size];

		// 무작위 숫자(난수)를 발생시키기 위해서는
		// 난수 발생 전용 객체가 필요하다.
		// -> 『java.util.random』

		Random rd = new Random();

		// ※Random 클래스의 『nextInt(int n)』메소드
		// 0 ~ 매개변수로 넘겨받은 정수 n-1 까지의 수 중
		// 무작위 정수(난수) 1개를 발생시킨다.
		

		//테스트
		//System.out.println("발생한 난수 : " + rd.nextInt(10));  
		// 0 ~ 9 까지의 무작위 정수 한 개~!!!
		//System.out.println("발생한 난수 : " + rd.nextInt(5)); 
		// 0 ~ 4 까지의 무작위 정수 한 개~!!!

		// 1 ~ 100 까지의 무작위 정수 한 개
		//System.out.println("발생한 난수 : " + rd.nextInt(100)+1); 

		//배열 구성
		for (int i=0; i<size; i++)   //size = 6  ->  0 1 2 3 4 5
			arr[i] = rd.nextInt(100)+1;
		// rd.nextInt(100)     -> 0 ~ 99 까지의 무작위 정수 한 개 발생
		// rd.nextInt(100)+1   -> 1 ~ 100 까지의 무작위 정수 한 개 발생

		//테스트 -> 구성된 배열의 전체 요소 출력
		/*                                          ---- 최종결과 확인 후 주석 처리~!!!
		for (int i=0;i<arr.length ; i++)
			System.out.print(arr[i]+ " ");
			//--==>> 58 99 76 57 65 69 17 74 83 75
			//--==>> 98 69 49 86 7 17 70 87 26 40
			//--==>> 52 55 65 94 45 13 95 76 13 70
		System.out.println();
		*/

		// 가장 큰 값, 가장 작은 값 확인
		int max, min;                    //-- 최대값, 최소값

		max = min = arr[0];

		for (int i=1; i<arr.length; i++)  //0번째값을 비교하면 의미없이 한바퀴도는것 이미0번째 담았고 그다음부터 비교하면됨 
		{
			if(max < arr[i])
				max = arr[i];

			if(min > arr[i])
				min = arr[i];
		}

		// 결과 출력
		System.out.printf("가장 큰 값 : %d, 가장 작은 값 : %d\n",max, min);
	}
}
/* 실행 결과
발생시킬 난수의 갯수 입력 :10
가장 큰 값 : 84, 가장 작은 값 : 21
계속하려면 아무 키나 누르십시오 . . .
*/


/* 실행 결과(주석처리 전)
발생시킬 난수의 갯수 입력 :10
76 77 87 79 22 33 2 100 37 24
가장 큰 값 : 100, 가장 작은 값 : 2
계속하려면 아무 키나 누르십시오 . . .

발생시킬 난수의 갯수 입력 :10
7 35 81 40 79 12 4 89 64 35
가장 큰 값 : 89, 가장 작은 값 : 4
계속하려면 아무 키나 누르십시오 . . .

발생시킬 난수의 갯수 입력 :10
95 68 94 96 3 49 91 96 71 47
가장 큰 값 : 96, 가장 작은 값 : 3
계속하려면 아무 키나 누르십시오 . . .
*/